#!/bin/bash

#check if git repos are changed/behind
STATS=""        # just for printing nicely
for path in `find $PWD -iname .git`
do
  REPOROOT=${path/%.git/}
  cd "$REPOROOT"
  NO_OF_MODFILES=`git status -sb | grep -P "^ *(M|R|D)" | wc -l`
  UNSYNCED_BRANCHES=$(git log --branches --not --remotes --simplify-by-decoration --decorate --oneline | wc -l )
  REMOTE_EXIST=$(git remote)
  BRANCH=$(git branch | grep "\*" | cut -f2 -d' ')
  # Evaluates to true if
  # If modified files are there
  # or A remote exist and unsynced branches are there
  if [ $NO_OF_MODFILES -gt 0 ] || { [ $UNSYNCED_BRANCHES -gt 0 ] && [ ! -z $REMOTE_EXIST ]; } ; then
    STATS+="\n"
    STATS+="$REPOROOT "
    if [ $NO_OF_MODFILES -gt 0 ]; then
      STATS+="\x1b[38;2;255;208;0m Mod:$NO_OF_MODFILES \x1b[0m"
    else
      STATS+="Mod:$NO_OF_MODFILES "
    fi
    if [ $UNSYNCED_BRANCHES -gt 0 ] ; then
      STATS+="\x1b[38;2;0;133;255m unsynced:$UNSYNCED_BRANCHES \x1b[0m\n"
    else
      STATS+="unsynced:$UNSYNCED_BRANCHES "
    fi
    STATS+="$BRANCH "
    STATS+="$(git config user.email) "
    STATS+="$(git config credential.username) "
    # git diff --stat
  fi
done
echo -e "$STATS" | column -t
