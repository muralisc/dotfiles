#!/usr/bin/env python3
import os
import sys
from rich import print as rprint
from pathlib import Path

DELETE_LOG_FILE="not-recently-played-cleanup-delete-log.log"

def process_line(copy_path_parts):
    rprint("[blue] processing line")
    cleaned_path = copy_path_parts[1].replace("'","")
    cleaned_source_path = copy_path_parts[0].replace("'","")


    if os.path.exists(cleaned_path):
      # if file exists , just delete copy (i.e in the shared_folder)
      rprint("[blue] Removing local {}".format( cleaned_path))
      os.remove(cleaned_path)
    else:
      # if file do not exist, delete the source as well
      rprint("[bold red] WILL REMOVE SOURCE [yellow] {}".format(cleaned_source_path))
      input("Press Enter to continue...")
      # Add to delete log file in the same folder !
      source_file_path = Path(cleaned_source_path)
      source_file_folder = source_file_path.parent
      log_path = source_file_folder.joinpath(DELETE_LOG_FILE)
      rprint("Writing logs to: {}".format(log_path))
      with open(log_path, "a") as f:
          f.write(f"{cleaned_source_path}\n")
      os.remove(cleaned_source_path)


print(sys.argv)
copy_log_path =sys.argv[1] + '/copy_paths.log'
if not os.path.exists(copy_log_path):
    sys.exit("EXITING !!! Copylog file do not exit in path: " + copy_log_path)
file1 = open(copy_log_path, 'r')
lines = file1.readlines()
for line in lines:
    copy_path_parts = line.strip().split(', ')
    process_line(copy_path_parts)

