#!/bin/bash

# find and copy 'not recently played'
#   - 'not recently played' is based on file accesstime
#   Drawbacks:
#   - other file activity may affect this
#   - for eg if you run rclone / rsync on whole folder then cut off date 
#     need to be reset
#
# Cleanup:
#   - During each run, cleanup target location, 
#   - If the target location do not have the file Remove in the source location

if [[ -z "$1" ]]; then
echo "Usage:"
echo "  bash ~/bin/not-recently-played "
echo "          [command|cp|mv|echo|dry] "
echo "          [source-folder] [copy-folder] [last-access-date] [number-of-files]"

echo "  bash ~/src/dotfiles/bin/media-view/not-recently-played dry ~/data/Media/videos/ ~/shared_folders/transfer_private/vids"
echo "  bash ~/src/dotfiles/bin/media-view/not-recently-played dry ~/data/Songs/ ~/shared_folders/transfer_private/songs/cron_songs/"
echo "  bash ~/src/dotfiles/bin/media-view/not-recently-played cp ~/data/footage/2021 ~/shared_folders/transfer_london_home/footage_copy/videos 2022-04-01 5"
echo "  bash ~/src/dotfiles/bin/media-view/not-recently-played cp ~/data/footage/2020 ~/shared_folders/raspberry-pi/photoframe/photos 2022-07-01 10"
echo "  bash ~/src/dotfiles/bin/media-view/not-recently-played cp ~/data/footage/2020 ~/shared_folders/raspberry-pi/photoframe/photos 2024-07-01 10"
fi

function get_random_min_max(){
    min=$1
    max=$2
    echo $(($RANDOM%($max-$min+1)+$min))
}

copy_command=${1:-echo}
SOURCE_FOLDERS="${2:-$HOME/data/Songs/Malayalam}"
SOURCE_FOLDER="$(tr ',' ' ' <<< $SOURCE_FOLDERS)"
DEST_FOLDER="${3:-$HOME/shared_folders/transfer_private/songs/cron_songs/}"
LAST_ACCESS_DATE="${4:-2022-03-28}"
NO_OF_FILES_TO_COPY="${5:-20}"
REGEX_FILTER="${6:-.*}"

# FIND_EXCLUDE='-not -ipath "*1960*" -ipath "*JPG"'
FIND_EXCLUDE='-not -ipath "*CR3" -not -ipath "*pp3" -not -ipath "*lrv" -not -ipath "*thm"'

touch ${DEST_FOLDER}/skip_files.txt
EXCLUDE_FILE_LIST_CMD="grep -vFf ${DEST_FOLDER}/skip_files.txt"

FIND_FILTER_COMMAND="find $SOURCE_FOLDER -type f -regex "\'""$REGEX_FILTER""\'" -not -newerat ${LAST_ACCESS_DATE} ${FIND_EXCLUDE} | $EXCLUDE_FILE_LIST_CMD "

NUMBER_OF_ITEMS_LEFT=$(eval "$FIND_FILTER_COMMAND" | wc -l)

echo "$(date -Is) Running Cleanup script, remaining items: $NUMBER_OF_ITEMS_LEFT"
mkdir -p $DEST_FOLDER
python ~/src/dotfiles/bin/media-view/not-recently-played-cleanup $DEST_FOLDER

rand_min=${NO_OF_FILES_TO_COPY}
rand_max=$(eval "$FIND_FILTER_COMMAND" | wc -l)
rand_line_no=$(get_random_min_max $rand_min $rand_max)
echo "Found Random line_no $rand_line_no, min: $rand_min, max: $rand_max"

> $DEST_FOLDER/copy_paths.log
OIFS="$IFS"
IFS=$'\n'
for source_file_path in $(eval "$FIND_FILTER_COMMAND" | head -n $rand_line_no | tail -n ${NO_OF_FILES_TO_COPY}); do
    FILE_DIRECTORY=$(dirname $source_file_path)
    filename=$(basename $source_file_path)
    dest_file_path="$DEST_FOLDER/$filename"
    echo "$source_file_path, $dest_file_path" | tee -a $DEST_FOLDER/copy_paths.log
    "$copy_command" "$source_file_path" "$dest_file_path"
done
IFS="$OIFS"

# sqlite3 /var/tmp/notforkids.db  "create table nfk_acces_dates (id INTEGER PRIMARY KEY,path TEXT,date INT);"
# sqlite3 /var/tmp/notforkids.db  "insert into nfk_acces_dates (path,date) VALUES('test path',strftime('%s','now'));"
# sqlite3 /var/tmp/notforkids.db  "select * from nfk_acces_dates"
