#!/usr/bin/env python3

from datetime import datetime, timedelta
import json
from pathlib import Path

TIMEFORMAT = "%Y-%m-%dT%H:%M"

def read_and_update_intervals():
    interval_path = Path('/tmp/obsidian-intervals.json')
    intervals = {}
    if interval_path.is_file():
        with open(interval_path, 'r') as reader2:
            intervals = json.load(reader2)
            intervals[t1.strftime(TIMEFORMAT)] = t2.strftime(TIMEFORMAT)
    with open(interval_path, 'w') as writer:
        json.dump(intervals, writer)
    return intervals


def stringify_timedelta(time_delta_val):
    tot_seconds = time_delta_val.total_seconds()
    hours, rem = divmod(tot_seconds, 60*60)
    mins, sec = divmod(rem, 60)
    hours = int(hours)
    mins = int(mins)
    sec = int(sec)
    return f"{hours}h{mins}m"

def get_interval_time_delta(intervals):
    net_delta = timedelta(hours=0)
    for k, v in intervals.items():
        t1 = datetime.strptime(k, TIMEFORMAT)
        t2 = datetime.strptime(v, TIMEFORMAT)
        net_delta += (t2-t1)
    return net_delta

with open('/tmp/obsidian.state', 'r') as reader:
    line = reader.readline().strip()
    t1 = datetime.strptime(line,TIMEFORMAT)
    t2 = datetime.now()
    # read intervals, update intervals
    intervals = read_and_update_intervals()
    net_delta = get_interval_time_delta(intervals)

    last_timedelta = t2 - t1
    last_timedelta_str = stringify_timedelta(last_timedelta)
    timedelta_net_str = stringify_timedelta(net_delta)
    print(f"{last_timedelta_str}, {timedelta_net_str}")

# datediff -i "%Y-%m-%dT%H:%M" $(cat /tmp/obsidian.state) $(date +"%Y-%m-%dT%H:%M") -f "%H:%M"
